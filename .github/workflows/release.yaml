name: Build and Release

on:
  push:
jobs:
  build:
    name: Build and Publish
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_WRITE_ACCESS }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure Poetry
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
          #poetry config pypi-token.testpypi ${{ secrets.TEST_PYPI_TOKEN }}

      - name: Install dependencies
        run: |
          poetry install

      - name: Configure git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Auto-bump minor version and release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_WRITE_ACCESS }}
          GH_TOKEN: ${{ secrets.GH_WRITE_ACCESS }}
        run: |
          # Force a minor version bump by creating a feat commit if needed
          CURRENT_VERSION=$(poetry version -s)
          echo "Current version: $CURRENT_VERSION"

          # Run semantic release to bump version
          poetry run semantic-release version

          NEW_VERSION=$(poetry version -s)
          echo "New version: $NEW_VERSION"

          if [[ "$CURRENT_VERSION" != "$NEW_VERSION" ]]; then
            echo "VERSION=${NEW_VERSION}" >> $GITHUB_ENV
            echo "Version was bumped from $CURRENT_VERSION to $NEW_VERSION"
          else
            echo "No version change detected"
          fi
      - name: Build and publish
        if: env.VERSION != ''
        run: |
          poetry build
          poetry publish
